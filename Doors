local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GameData = ReplicatedStorage:WaitForChild("GameData")
local Floor = GameData:WaitForChild("Floor")
local Fools = Floor.Value == "Fools"
local Hotel = Floor.Value == "Hotel"
local Rooms = Floor.Value == "Rooms"
local Mines = Floor.Value == "Mines"
local Retro = Floor.Value == "Retro"
local Rooms = Floor.Value == "Rooms"
local Backdoor = Floor.Value == "Backdoor"
if Fools then
RemotesFolder = ReplicatedStorage.EntityInfo
else
RemotesFolder = ReplicatedStorage.RemotesFolder
end
--// Script \\
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
    Title = "YOUHUB | DOORS | ".. game:GetService("Players").LocalPlayer.Name,
    SubTitle = "Version 'Beta' v0.0.2",
    TabWidth = 160,
    Size = UDim2.fromOffset(500, 400),
    Acrylic = true,
    Theme = "Aqua",
    MinimizeKey = Enum.KeyCode.LeftControl
})
Fluent:Notify({
        Title = "Keybind Toggle",
        Content = "Enum.KeyCode.LeftControl",
        SubContent = "Press keybind 'LeftControl' to Toggle UI",
        Duration = 5
    })
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Players = Window:AddTab({ Title = "Players", Icon = "user" }),
    Entities = Window:AddTab({ Title = "Entities", Icon = "shield" }),
    Visual = Window:AddTab({ Title = "Visual", Icon = "eye" }),
    ESP = Window:AddTab({ Title = "ESP", Icon = "book" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}
Tabs.Main:AddSection("Death")
if Fools then
Tabs.Main:AddDropdown("MyDropdown",{
        Title = "Select On Death",
        Values = {"Revive [FREE]", "Leave", "Lobby"},
        Multi = false,
        Default = 1,
        Callback = function(v)
_G.SelectOnDeath = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.EnabledOnDeath then
if game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectOnDeath == "Lobby" then
RemotesFolder.Lobby:FireServer()
elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectOnDeath == "Leave" then
game:Shutdown()
elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectOnDeath == "Revive [FREE]" then
RemotesFolder.Revive:FireServer()
end
end
end)
end})
Tabs.Main:AddToggle("MyToggle",{
Title = "Enabled On Death",
Default = false,
Callback = function(v)
_G.EnabledOnDeath = v
end})
else
Tabs.Main:AddDropdown("MyDropdown",{
        Title = "Select On Death",
        Values = {"Revive [NOT FREE]", "Leave", "Lobby"},
        Multi = false,
        Default = 1,
        Callback = function(v)
_G.SelectOnDeath = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.EnabledOnDeath then
if game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectOnDeath == "Lobby" then
RemotesFolder.Lobby:FireServer()
elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectOnDeath == "Leave" then
game:Shutdown()
elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectOnDeath == "Revive [NOR FREE]" then
RemotesFolder.Revive:FireServer()
end
end
end)
end})
Tabs.Main:AddToggle("MyToggle",{
Title = "Enabled On Death",
Default = false,
Callback = function(v)
_G.EnabledOnDeath = v
end})
end
Tabs.Main:AddSection("Fast")
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.FastDoors then game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door"):SetAttribute("FastOpen", true)
end 
end)
end)
Tabs.Main:AddToggle("MyToggle",{
Title = "Fast Doors",
Default = false,
Callback = function(v)
_G.FastDoors = v
end})
Tabs.Main:AddSection("Reach")
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.DoorsReach then game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door").ClientOpen:FireServer()
end 
end)
end)
Tabs.Main:AddToggle("MyToggle",{
Title = "Doors Reach",
Default = false,
Callback = function(v)
_G.DoorsReach = v
end})
workspace.CurrentRooms.ChildAdded:Connect(function(v)
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = _G.IncreasedDistance and 15 or 8
end
end)
Tabs.Main:AddToggle("MyToggle",{
Title = "Reach",
Default = false,
Callback = function(v)
_G.IncreasedDistance = v
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = _G.IncreasedDistance and 15 or 8
end
end
end})
Tabs.Main:AddSection("Interact")
workspace.CurrentRooms.ChildAdded:Connect(function(v)
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = not _G.ThroughInteract
end
end)
Tabs.Main:AddToggle("MyToggle",{
Title = "Through Interact",
Default = false,
Callback = function(v)
_G.ThroughInteract = v
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = not _G.ThroughInteract
end
end
end})
workspace.CurrentRooms.ChildAdded:Connect(function(v)
if v:IsA("ProximityPrompt") and _G.InstanceInteract then
v.HoldDuration = 0
end
end)
Tabs.Main:AddToggle("MyToggle",{
Title = "Instance Interact",
Default = false,
Callback = function(v)
_G.InstanceInteract = v
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") and _G.InstanceInteract then
v.HoldDuration = 0
end
end
end})
Tabs.Main:AddSection("Automation")
Tabs.Main:AddToggle("MyToggle",{
Title = "Auto Breaker",
Default = false,
Callback = function(v)
_G.AutoBreaker = v
while _G.AutoBreaker do wait(1)
if _G.AutoBreaker then
RemotesFolder.EBF:FireServer()
end
end
end})
Tabs.Main:AddButton({
Title = "Auto Padlock Unlock",
Callback = function()
local Floor = game:GetService("ReplicatedStorage").GameData.Floor
local Paper = workspace:FindFirstChild("LibraryHintPaper",true) or workspace:FindFirstChild("LibraryHintPaperHard",true) or Players:FindFirstChild("LibraryHintPaper",true) or Players:FindFirstChild("LibraryHintPaperHard",true)
if not Paper then
Window:Dialog({
                Title = "YOUHUB | DOORS ",
                Content = "You need Paper"
                Buttons = {
                    {
                        Title = "Confirm",
                        Callback = function()
                        end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                        end
                    }
                }
            })
return
end
local HintsNeeded = Floor.Value == "Fools" and 8 or 3
local Hints = 0
for _,Collected in pairs(game.Players.LocalPlayer.PlayerGui.PermUI.Hints:GetChildren()) do
if Collected.Name == "Icon" then
if Collected:IsA("ImageLabel") then
for _,Icon in pairs(Paper.UI:GetChildren()) do
if tonumber(Icon.Name) then
if Icon.ImageRectOffset == Collected.ImageRectOffset then
Hints += 1
end
end
end
end
end
end
if Hints < HintsNeeded then
print("Need Books")
return
end
local t = {}
for i = 1, Floor.Value == "Hotel" and 5 or 10 do
local Icon = Paper.UI[i]
local Number = -1
for _,Collected in pairs(game.Players.LocalPlayer.PlayerGui.PermUI.Hints:GetChildren()) do
if Collected.Name == "Icon" then
if Collected.ImageRectOffset == Icon.ImageRectOffset then
Number = tonumber(Collected.TextLabel.Text)
end
end
end
table.insert(t,Number)
end
for one=0,t[1]==-1 and 9 or 0 do
for two=0,t[2]==-1 and 9 or 0 do
for three=0,t[3]==-1 and 9 or 0 do
for four=0,t[4]==-1 and 9 or 0 do
for five=0,t[5]==-1 and 9 or 0 do
if Floor.Value == "Fools" then
for six=0,t[6]==-1 and 9 or 0 do
for seven=0,t[7]==-1 and 9 or 0 do
for eight=0,t[8]==-1 and 9 or 0 do
for nine=0,t[9]==-1 and 9 or 0 do
for ten=0,t[10]==-1 and 9 or 0 do
RemotesFolder.PL:FireServer((t[1]==-1 and one or t[1])..(t[2]==-1 and two or t[2])..(t[3]==-1 and three or t[3])..(t[4]==-1 and four or t[4])..(t[5]==-1 and five or t[5])..(t[6]==-1 and six or t[6])..(t[7]==-1 and seven or t[7])..(t[8]==-1 and eight or t[8])..(t[9]==-1 and nine or t[9])..(t[10]==-1 and ten or t[10]))
end
end
end
end
end
else
RemotesFolder.PL:FireServer((t[1]==-1 and one or t[1])..(t[2]==-1 and two or t[2])..(t[3]==-1 and three or t[3])..(t[4]==-1 and four or t[4])..(t[5]==-1 and five or t[5]))
end
end
end
end
end
end
end})
